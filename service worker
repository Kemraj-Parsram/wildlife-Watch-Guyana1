onst CACHE_NAME = 'wildlife-watch-cache-v2';
const urlsToCache = [
    '/',
    '/index.html',
    '/manifest.json'
];

self.addEventListener('install', event => {
    event.waitUntil(
        caches.open(CACHE_NAME)
            .then(cache => {
                console.log('Opened cache');
                return cache.addAll(urlsToCache);
            })
    );
    self.skipWaiting();
});

self.addEventListener('activate', event => {
    const cacheWhitelist = [CACHE_NAME];
    event.waitUntil(
        caches.keys().then(cacheNames => {
            return Promise.all(
                cacheNames.map(cacheName => {
                    if (cacheWhitelist.indexOf(cacheName) === -1) {
                        return caches.delete(cacheName);
                    }
                })
            );
        })
    );
});

self.addEventListener('fetch', event => {
    event.respondWith(
        caches.match(event.request)
            .then(response => {
                return response || fetch(event.request);
            })
    );
});

self.addEventListener('sync', event => {
    if (event.tag === 'send-reports') {
        event.waitUntil(notifyUserOfPendingReports());
    }
});

function notifyUserOfPendingReports() {
    const dbRequest = indexedDB.open('wildlifeDB', 2);

    dbRequest.onsuccess = event => {
        const db = event.target.result;
        const transaction = db.transaction(['reports'], 'readonly');
        const store = transaction.objectStore('reports');
        const countRequest = store.count();

        countRequest.onsuccess = () => {
            const reportCount = countRequest.result;
            if (reportCount > 0) {
                self.registration.showNotification(`${reportCount} pending wildlife report(s)`, {
                    body: 'You are back online! Please open the app to send your saved reports.',
                    icon: 'https://placehold.co/192x192/22c55e/FFFFFF?text=WWG'
                });
            }
        };
    };

    dbRequest.onerror = event => {
        console.error('Error opening database in service worker:', event.target.errorCode);
    };
}

